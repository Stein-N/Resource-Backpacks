plugins {
    id 'ml-loader'
    id 'net.neoforged.moddev'
    id 'me.modmuss50.mod-publish-plugin'
}


dependencies {
    implementation "net.xstopho.resourceconfigapi:resourceconfigapi-neoforge:${resource_config_api}"
    implementation "net.xstopho.resourcelibrary:resourcelibrary-neoforge:${resource_library}"

    implementation "com.misterpemodder:shulkerboxtooltip-neoforge:${shulker_box_tooltip}+${minecraft_version}"
    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_api}"
    compileOnly "io.wispforest:accessories-neoforge:${accessories}"

    // Runtime Mods
    runtimeOnly "maven.modrinth:emi:${emi}+${minecraft_version}+neoforge"
}

neoForge {
    version = neoforge_version

    parchment {
        minecraftVersion = minecraft_version
        mappingsVersion = parchment_version
    }

    runs {
        configureEach {
            systemProperty('neoforge.enableGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
            gameDirectory = project.file("runs/${it.name.toLowerCase()}")
        }
        client {
            client()
        }
        server {
            server()
            programArguments.add('nogui')
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('../common/src/main/resources/').getAbsolutePath()
        }
    }
    mods {
        "${mod_id}" { sourceSet sourceSets.main }
    }
}

publishMods {
    file = jar.archiveFile
    modLoaders.add("neoforge")

    modrinth { optional('curios-continuation') }
    curseforge { optional('curios-continuation') }
}