plugins {
    id 'java-library'
}

base {
    archivesName = "$mod_id-$project.name"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(java_version)
}

repositories {
    mavenCentral()
    google()
    maven { url 'https://raw.githubusercontent.com/Stein-N/resources/main/maven' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven { url 'https://maven.neoforged.net/releases/' }
    maven { url 'https://maven.parchmentmc.org/' }
    maven { url 'https://api.modrinth.com/maven' }

    // ShulkerBoxTooltip
    maven { url "https://maven.misterpemodder.com/libs-release/" }

    // Accessories
    maven { url 'https://maven.wispforest.io/releases' }
    maven { url 'https://maven.su5ed.dev/releases' }
    maven { url 'https://maven.fabricmc.net' }
    maven { url 'https://maven.shedaniel.me/' }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.1.0'
}

['apiElements', 'runtimeElements'].each { variant ->
    configurations."$variant".outgoing {
        capability("$group:${base.archivesName.get()}:$version")
        capability("$group:$mod_id-${project.name}-${minecraft_version}:$version")
        capability("$group:$mod_id:$version")
    }
}

jar {
    from(rootProject.file("LICENSE")) {
        rename { "${it}_${mod_name}" }
    }

    manifest {
        attributes([
                'Specification-Title'   : mod_name,
                'Specification-Vendor'  : mod_author,
                'Specification-Version' : project.jar.archiveVersion,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.jar.archiveVersion,
                'Implementation-Vendor' : mod_author,
                'Built-On-Minecraft'    : minecraft_version
        ])
    }
}

processResources {
    var expandProps = [
            // Project related Keys
            "version": version,
            "group": project.group,
            "java_version": java_version,

            // Mod related Keys
            "minecraft_version": minecraft_version,
            "mod_name": mod_name,
            "mod_author": mod_author,
            "mod_id": mod_id,
            "mod_license": mod_license,
            "mod_credits": mod_credits,
            "mod_description": mod_description,

            // General Key
            "minecraft_version_range": minecraft_version_range,

            // Fabric Keys
            "fabric_loader_version": fabric_loader_version,
            "fabric_api_version": fabric_api_version,

            // NeoForge Keys
            "neoforge_version": neoforge_version,

            // Dependencies
            "resource_config_api": resource_config_api,
            "resource_library": resource_library,

            // Suggestions
            "shulkerboxtooltip": shulker_box_tooltip
    ]

    filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/neoforge.mods.toml', '*.mixins.json']) {
        expand expandProps
    }
    inputs.properties(expandProps)
}